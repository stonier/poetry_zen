######################################################################
#
# This configuration takes advantage of the tox plugin:
#    https://github.com/enpaul/tox-poetry-installer
# In particular, if locked deps are specified, it obtains
# these from poetry's lock file.
#
# If you want more direct control over poetry and tox, refer to
#    https://python-poetry.org/docs/faq#is-tox-supported
#
######################################################################
[constants]
source_locations =
    poetry_zen
    tests

[tox]
isolated_build = true
skip_missing_interpreters = true
envlist = py38, py310, format, lint, static

######################################################################
# Tests & Coverage
######################################################################

[testenv]
description = Tests
require_locked_deps = true
require_poetry = true
locked_deps =
    pytest
    pytest-console-scripts
    pytest-cov
commands =
    pytest -s tests/
    pytest --cov

[coverage:run]
# ensure conditional branches are explored (important)
#   https://coverage.readthedocs.io/en/latest/branch.html#branch
branch = true

[coverage:report]
# print line numbers where coverage is missing
show_missing = true
# customise this as needed (it's a list, just add row items)
exclude_lines =
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmetho"

######################################################################
# Formatters
######################################################################

[testenv:format]
description = Formatters
locked_deps =
    black
commands =
    black {[constants]source_locations}

######################################################################
# Linters
######################################################################

[testenv:lint]
description = Linters
locked_deps =
    flake8
    flake8-import-order
    flake8-bandit
    flake8-docstrings
commands =
    flake8 {[constants]source_locations}

[flake8]
# - D*** documentation (docstrings)
# - S101 use of assert warning (bandit)
per-file-ignores =
    tests/*: D, S101
# match black line lengths
max-line-length = 88
# avoid overly complex functions
# NB: this option by default is off, recommend complexity is 10
#   https://en.wikipedia.org/wiki/Cyclomatic_complexity
max-complexity: 15
import-order-style = google
# darglint docstring matching implementation checks
#  - short: one liners are not checked
#  - long: one liners and descriptions without args/returns are not checked
strictness = long
docstring_style=sphinx

[testenv:static]
description = Type Checking
locked_deps =
    mypy
commands =
    mypy --disallow-untyped-defs poetry_zen
    mypy tests
