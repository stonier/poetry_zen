# Originally forked from https://github.com/snok/install-poetry
# We should either sync that to stargate's github and build around it
# or just pull across updates now and then.
#
# Modifications:
#  - added caching of the installation
#
name: "Install Poetry Action"
author: "Sondre Lilleb√∏ Gundersen <sondrelg@live.no>"
description: "Installs and configures Poetry"
branding:
  icon: "package"
  color: "green"
inputs:
  version:
    description: "The Poetry version to install"
    required: true
    default: "latest"
  virtualenvs-create:
    description: "Whether Poetry should create a virtualenv or not"
    required: false
    default: "true"
  virtualenvs-in-project:
    description: "Whether Poetry should create virtualenvs in the project directory or not"
    required: false
    default: "false"
  virtualenvs-path:
    description: "The Poetry virtualenv path"
    required: false
    default: "{cache-dir}/virtualenvs"
  installer-parallel:
    description: "Whether to install many packages at once or one by one. This can fix PyPI DNS resolution errors, but also slows down the installation"
    required: false
    default: "true"
  installation-arguments:
    description: "Arguments passed directly to the Poetry installation script. For example --force."
    required: false
runs:
  using: "composite"
  steps:

    # Cache poetry (prep for the following install step)
    # This prevents the workflow from installing Poetry every time,
    # which can be slow. Note the use of the Poetry version
    # number in the cache key, and the "-0" suffix: this allows you
    # to invalidate the cache manually if/when you want to upgrade
    # Poetry, or if something goes wrong.
    - name: Cache Poetry
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.2.0-1

    - name: Install and configure Poetry
      run: $GITHUB_ACTION_PATH/install_poetry.bash
      shell: bash
      env:
        VERSION:                ${{ inputs.version }}
        VIRTUALENVS_CREATE:     ${{ inputs.virtualenvs-create }}
        VIRTUALENVS_IN_PROJECT: ${{ inputs.virtualenvs-in-project }}
        VIRTUALENVS_PATH:       ${{ inputs.virtualenvs-path }}
        INSTALLER_PARALLEL:     ${{ inputs.installer-parallel }}
        INSTALLATION_ARGUMENTS: ${{ inputs.installation-arguments }}
